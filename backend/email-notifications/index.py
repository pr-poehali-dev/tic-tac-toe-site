import json
import os
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime
from typing import Dict, Any

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    Args: event - dict —Å httpMethod, body (user_login, user_email, notification_type)
          context - –æ–±—ä–µ–∫—Ç —Å request_id, function_name
    Returns: HTTP response —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ email
    '''
    method: str = event.get('httpMethod', 'GET')
    
    # Handle CORS OPTIONS request
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type, Authorization',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'})
        }
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        body_data = json.loads(event.get('body', '{}'))
        user_login = body_data.get('user_login', '')
        user_email = body_data.get('user_email', '')
        notification_type = body_data.get('notification_type', 'registration')
        
        if not user_login:
            return {
                'statusCode': 400,
                'headers': {'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({'error': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'})
            }
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        smtp_host = os.environ.get('SMTP_HOST')
        smtp_port = int(os.environ.get('SMTP_PORT', 587))
        smtp_user = os.environ.get('SMTP_USER')
        smtp_password = os.environ.get('SMTP_PASSWORD')
        admin_email = os.environ.get('ADMIN_EMAIL')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        missing_configs = []
        if not smtp_host:
            missing_configs.append('SMTP_HOST')
        if not smtp_user:
            missing_configs.append('SMTP_USER')
        if not smtp_password:
            missing_configs.append('SMTP_PASSWORD')
        if not admin_email:
            missing_configs.append('ADMIN_EMAIL')
            
        if missing_configs:
            return {
                'statusCode': 500,
                'headers': {'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({
                    'error': f'–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã email: {", ".join(missing_configs)}',
                    'missing_configs': missing_configs
                })
            }
        
        # –°–æ–∑–¥–∞–µ–º email —Å–æ–æ–±—â–µ–Ω–∏–µ
        current_time = datetime.now().strftime('%d.%m.%Y %H:%M:%S')
        
        if notification_type == 'registration':
            subject = f'üéâ –ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user_login}'
            
            # HTML –≤–µ—Ä—Å–∏—è –ø–∏—Å—å–º–∞
            html_body = f'''
            <html>
            <head>
                <style>
                    body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #333; }}
                    .container {{ max-width: 600px; margin: 0 auto; padding: 20px; }}
                    .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                              color: white; padding: 20px; border-radius: 10px 10px 0 0; text-align: center; }}
                    .content {{ background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }}
                    .info-box {{ background: white; padding: 15px; border-left: 4px solid #667eea; 
                                margin: 15px 0; border-radius: 5px; }}
                    .footer {{ text-align: center; margin-top: 20px; color: #666; font-size: 12px; }}
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéâ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!</h1>
                    </div>
                    <div class="content">
                        <p>–ü—Ä–∏–≤–µ—Ç! –ù–∞ –≤–∞—à–µ–º —Å–∞–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</p>
                        
                        <div class="info-box">
                            <p><strong>üë§ –õ–æ–≥–∏–Ω:</strong> {user_login}</p>
                            <p><strong>üìß Email:</strong> {user_email if user_email else '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                            <p><strong>‚è∞ –í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> {current_time}</p>
                            <p><strong>üÜî ID –∑–∞–ø—Ä–æ—Å–∞:</strong> {context.request_id}</p>
                        </div>
                        
                        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL.</p>
                        
                        <p>–í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å.</p>
                    </div>
                    <div class="footer">
                        <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</p>
                    </div>
                </div>
            </body>
            </html>
            '''
            
            # –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
            text_body = f'''
–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!

–õ–æ–≥–∏–Ω: {user_login}
Email: {user_email if user_email else '–ù–µ —É–∫–∞–∑–∞–Ω'}
–í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {current_time}
ID –∑–∞–ø—Ä–æ—Å–∞: {context.request_id}

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL.
–í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å.

–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
            '''
        else:
            return {
                'statusCode': 400,
                'headers': {'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({'error': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'})
            }
        
        # –°–æ–∑–¥–∞–µ–º email —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg = MIMEMultipart('alternative')
        msg['From'] = smtp_user
        msg['To'] = admin_email
        msg['Subject'] = subject
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏ HTML –≤–µ—Ä—Å–∏–∏
        part1 = MIMEText(text_body, 'plain', 'utf-8')
        part2 = MIMEText(html_body, 'html', 'utf-8')
        
        msg.attach(part1)
        msg.attach(part2)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
        try:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É
            server = smtplib.SMTP(smtp_host, smtp_port)
            server.starttls()  # –í–∫–ª—é—á–∞–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
            server.login(smtp_user, smtp_password)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            text = msg.as_string()
            server.sendmail(smtp_user, admin_email, text)
            server.quit()
            
            return {
                'statusCode': 200,
                'headers': {'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({
                    'success': True,
                    'message': f'Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {admin_email}',
                    'user_login': user_login,
                    'notification_type': notification_type,
                    'timestamp': current_time,
                    'request_id': context.request_id
                })
            }
            
        except smtplib.SMTPAuthenticationError:
            return {
                'statusCode': 401,
                'headers': {'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({
                    'error': '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ SMTP. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å email –∞–∫–∫–∞—É–Ω—Ç–∞'
                })
            }
        except smtplib.SMTPConnectError:
            return {
                'statusCode': 503,
                'headers': {'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({
                    'error': '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ö–æ—Å—Ç –∏ –ø–æ—Ä—Ç'
                })
            }
        except Exception as smtp_error:
            return {
                'statusCode': 500,
                'headers': {'Access-Control-Allow-Origin': '*'},
                'body': json.dumps({
                    'error': f'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {str(smtp_error)}'
                })
            }
            
    except json.JSONDecodeError:
        return {
            'statusCode': 400,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞'})
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({
                'error': f'–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: {str(e)}'
            })
        }